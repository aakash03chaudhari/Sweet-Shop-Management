package com.cognizant.sweetitemservice.exception;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletResponse;
import javax.validation.ConstraintViolation;


import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.transaction.TransactionSystemException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;
import org.springframework.web.bind.support.WebExchangeBindException;
import org.springframework.web.context.request.WebRequest;

@RestControllerAdvice
public class GlobalExceptionHandler {

	
	@ExceptionHandler({TransactionSystemException.class})
	protected ResponseEntity<Object> handlePersistenceException(final Exception ex, final WebRequest request) {
	   // logger.info(ex.getClass().getName());
	    //
	    Throwable cause = ((TransactionSystemException) ex).getRootCause();
	    if (cause instanceof ConstraintViolationException) {        

	        javax.validation.ConstraintViolationException consEx= (ConstraintViolationException) cause;
	        final List<String> errors = new ArrayList<String>();
	        for (final ConstraintViolation<?> violation : consEx.getConstraintViolations()) {
	            errors.add(violation.getPropertyPath() + ": " + violation.getMessage());
	        }

	        final ApiError apiError = new ApiError(HttpStatus.BAD_REQUEST, consEx.getLocalizedMessage(), errors);
	        return new ResponseEntity<Object>(apiError, new HttpHeaders(), apiError.getStatus());
	    }
	    final ApiError apiError = new ApiError(HttpStatus.INTERNAL_SERVER_ERROR, ex.getLocalizedMessage(), "error occurred");
	    return new ResponseEntity<Object>(apiError, new HttpHeaders(), apiError.getStatus());
	}

	@ExceptionHandler(SweetItemNotFoundException.class)
	public String handleSweetItemNotFoundException(SweetItemNotFoundException e, HttpServletResponse response) {
		return "Sweet Item Not Found";
	}
}
